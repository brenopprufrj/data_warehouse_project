
-- Esquema de Banco de Dados: Sistema de Locadora de Veículos
-- Brian José Costa de Medeiro                     DRE:121087678

DROP SCHEMA IF EXISTS BRJCM CASCADE;

CREATE SCHEMA BRJCM;

SET search_path TO BRJCM;


-- 1. Clientes (Pessoa Física ou Jurídica)
CREATE TABLE clientes (
    cliente_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_completo VARCHAR(255) NOT NULL,
    cpf_cnpj     VARCHAR(18)  NOT NULL UNIQUE,
    tipo_pessoa  CHAR(1)      NOT NULL 
                      CHECK (tipo_pessoa IN ('F','J')),
    email        VARCHAR(100) NOT NULL UNIQUE,
    telefone     VARCHAR(20)  NOT NULL,
    endereco_cidade VARCHAR(100),
    endereco_estado VARCHAR(50),
    data_cadastro TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW()
);


-- 2. Motoristas (Condutores habilitados)
CREATE TABLE motoristas (
    motorista_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cliente_id     INTEGER     NOT NULL 
                       REFERENCES clientes(cliente_id),
    nome_completo  VARCHAR(255) NOT NULL,
    cnh            VARCHAR(11)  NOT NULL UNIQUE,
    cnh_categoria  VARCHAR(5)   NOT NULL,
    cnh_validade   DATE         NOT NULL
);


-- 3. Pátios de Estacionamento
CREATE TABLE patios (
    patio_id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome         VARCHAR(100) NOT NULL UNIQUE,
    endereco     VARCHAR(255) NOT NULL,
    criado_em    TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW()
);


-- 4. Vagas em cada Pátio
CREATE TABLE vagas (
    vaga_id     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    patio_id    INTEGER NOT NULL 
                   REFERENCES patios(patio_id),
    codigo      VARCHAR(20) NOT NULL,
    ocupada     BOOLEAN DEFAULT FALSE,
    CONSTRAINT uq_vaga_por_patio UNIQUE (patio_id, codigo)
);


-- 5. Grupos (Categorias) de Veículos
CREATE TABLE grupos_veiculos (
    grupo_id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_grupo         VARCHAR(50) NOT NULL UNIQUE,
    descricao_grupo    TEXT,
    tarifa_diaria_base DECIMAL(10,2) NOT NULL 
                        CHECK (tarifa_diaria_base > 0)
);


-- 6. Frota de Veículos
CREATE TABLE veiculos (
    veiculo_id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    placa             VARCHAR(10)  NOT NULL UNIQUE,
    chassi            VARCHAR(17)  NOT NULL UNIQUE,
    grupo_id          INTEGER      NOT NULL 
                        REFERENCES grupos_veiculos(grupo_id),
    vaga_atual_id     INTEGER      UNIQUE 
                        REFERENCES vagas(vaga_id),
    marca             VARCHAR(50)  NOT NULL,
    modelo            VARCHAR(50)  NOT NULL,
    cor               VARCHAR(30)  NOT NULL,
    ano_fabricacao    INTEGER      NOT NULL,
    cambio            VARCHAR(20)  NOT NULL 
                        CHECK (cambio IN ('Manual','Automática')),
    possui_ar_cond    BOOLEAN      NOT NULL,
    situacao          VARCHAR(20)  NOT NULL DEFAULT 'Disponível'
                        CHECK (situacao IN ('Disponível','Alugado','Manutenção'))
);


-- 7. Reservas de Veículos
CREATE TABLE reservas (
    reserva_id             INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cliente_id             INTEGER     NOT NULL 
                             REFERENCES clientes(cliente_id),
    grupo_id               INTEGER     NOT NULL 
                             REFERENCES grupos_veiculos(grupo_id),
    patio_retirada_id      INTEGER     NOT NULL 
                             REFERENCES patios(patio_id),
    criado_em              TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    retirada_prevista      TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    devolucao_prevista     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    situacao_reserva       VARCHAR(20) DEFAULT 'Ativa'
                             CHECK (situacao_reserva 
                                    IN ('Ativa','Cancelada','Concluída')),
    CONSTRAINT chk_retorno 
       CHECK (devolucao_prevista > retirada_prevista)
);


-- 8. Locações (Aluguéis) de Veículos
CREATE TABLE locacoes (
    locacao_id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    reserva_id           INTEGER UNIQUE 
                             REFERENCES reservas(reserva_id),
    cliente_id           INTEGER     NOT NULL 
                             REFERENCES clientes(cliente_id),
    motorista_id         INTEGER     NOT NULL 
                             REFERENCES motoristas(motorista_id),
    veiculo_id           INTEGER     NOT NULL 
                             REFERENCES veiculos(veiculo_id),
    patio_retirada_id    INTEGER     NOT NULL 
                             REFERENCES patios(patio_id),
    patio_devolucao_id   INTEGER     REFERENCES patios(patio_id),
    retirada_real        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    devolucao_prevista   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    devolucao_real       TIMESTAMP WITHOUT TIME ZONE,
    valor_previsto       DECIMAL(10,2) NOT NULL,
    valor_final          DECIMAL(10,2),
    protecoes_extras     TEXT,
    CONSTRAINT chk_previsto_retirada 
      CHECK (devolucao_prevista > retirada_real),
    CONSTRAINT chk_real_maior 
      CHECK (devolucao_real IS NULL 
             OR devolucao_real > retirada_real)
);


-- 9. Cobranças de Locações
CREATE TABLE cobrancas (
    cobranca_id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    locacao_id    INTEGER NOT NULL 
                    REFERENCES locacoes(locacao_id),
    valor         DECIMAL(10,2) NOT NULL,
    emitida_em    TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW(),
    vencimento    DATE    NOT NULL,
    pago_em       DATE,
    status_pago   VARCHAR(20) NOT NULL DEFAULT 'Pendente'
                   CHECK (status_pago 
                          IN ('Pendente','Pago','Atrasado'))
);


-- 10. Acessórios Opcionais
CREATE TABLE acessorios (
    acessorio_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nome_acessorio VARCHAR(100) NOT NULL UNIQUE,
    descricao_acessorio TEXT
);


-- 11. Associação Veículos ↔ Acessórios
CREATE TABLE veiculos_acessorios (
    veiculo_id    INTEGER NOT NULL 
                   REFERENCES veiculos(veiculo_id),
    acessorio_id  INTEGER NOT NULL 
                   REFERENCES acessorios(acessorio_id),
    PRIMARY KEY (veiculo_id, acessorio_id)
);


-- 12. Prontuários de Veículos (Histórico de Manutenção/Avarias)
CREATE TABLE prontuarios_veiculos (
    prontuario_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    veiculo_id     INTEGER NOT NULL 
                   REFERENCES veiculos(veiculo_id),
    data_evento    DATE    NOT NULL,
    tipo_evento    VARCHAR(50) NOT NULL 
                   CHECK (tipo_evento 
                          IN ('Manutenção Preventiva',
                              'Manutenção Corretiva',
                              'Revisão','Avaria')),
    detalhes       TEXT    NOT NULL,
    custo_evento   DECIMAL(10,2)
);


-- 13. Fotos de Veículos
CREATE TABLE fotos_veiculos (
    foto_id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    veiculo_id    INTEGER NOT NULL 
                   REFERENCES veiculos(veiculo_id),
    caminho_imagem VARCHAR(255) NOT NULL,
    finalidade     VARCHAR(50) 
                   CHECK (finalidade 
                          IN ('Propaganda','Entrega','Devolução')),
    enviado_em     TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW()
);
